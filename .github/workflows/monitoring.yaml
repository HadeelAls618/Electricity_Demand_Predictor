name: monitoring

on:
  schedule:
    - cron: '30 * * * *'
  workflow_dispatch:

env:
  PYTHON_VERSION: 3.9
  POETRY_VERSION: 1.8.2
  POETRY_URL: https://install.python-poetry.org

jobs:
  monitoring:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      # Cache Poetry dependencies to speed up installs
      - name: Cache Poetry cache
        uses: actions/cache@v3
        with:
          path: ~/.cache/pypoetry
          key: poetry-cache-${{ runner.os }}-${{ env.PYTHON_VERSION }}-${{ env.POETRY_VERSION }}

      - name: Cache Virtual Environment
        uses: actions/cache@v3
        with:
          path: ~/.local
          key: poetry-${{ runner.os }}-${{ env.PYTHON_VERSION }}-${{ hashFiles('**/poetry.lock') }}-${{ hashFiles('.github/workflows/*.yml') }}

      - name: Set up Python ${{ env.PYTHON_VERSION }}
        uses: actions/setup-python@v3
        with:
          python-version: ${{ env.PYTHON_VERSION }}

      - name: Install Poetry
        run: |
          curl -sSL ${{ env.POETRY_URL }} | python - --version ${{ env.POETRY_VERSION }}
          echo "$HOME/.local/bin" >> $GITHUB_PATH
          export PATH="$HOME/.local/bin:$PATH"
          poetry --version  # Verify Poetry is installed

      - name: Install Dependencies
        run: poetry install --no-interaction --no-root

      - name: Verify Streamlit Installation
        run: poetry run streamlit --version

      - name: Run Monitoring Script
        env: 
          HOPSWORKS_PROJECT_NAME: ${{ secrets.HOPSWORKS_PROJECT_NAME }}
          HOPSWORKS_API_KEY: ${{ secrets.HOPSWORKS_API_KEY }}
        run: poetry run streamlit run src/monitoring_frontend.py
